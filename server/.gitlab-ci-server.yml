image: mscaldas/aws-k8s-build:3
variables:
  # KUBE_INGRESS_BASE_DOMAIN is the application deployment domain and should be set as a variable at the group or project level.
  # KUBE_INGRESS_BASE_DOMAIN: domain.example.com
  DOCKER_DRIVER: overlay2
  APP_NAME: kafka-ops

  REPOSITORY_URL: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}
  CONTAINER_IMAGE: arln/${APP_NAME}
  DOCKER_TLS_CERTDIR: "" ##added to solve the issue https://gitlab.com/gitlab-org/gitlab-ce/issues/64959
  TAG: ${CI_COMMIT_SHORT_SHA}

  K8_DEV_NAMESPACE: "default"
  K8_INT_NAMESPACE: "alice"

services:
  - docker:dind


stages:
  - build
  - deploy-dev
  - scan
  - build-int
  - deploy-int
  - purge-int


build:
  stage: build
  script:
    - cd server
    - $(aws ecr get-login --no-include-email --region us-east-1)
    - docker build -t ${CONTAINER_IMAGE}:${TAG} .
    - docker tag ${CONTAINER_IMAGE}:${TAG} ${REPOSITORY_URL}/arln/${APP_NAME}:${TAG}
    - docker push ${REPOSITORY_URL}/arln/${APP_NAME}:${TAG}
  only:
    - disabled

deploy-dev:
  stage: deploy-dev
  script:
    - cd server
    - kubectl config set-cluster k8s --server="${SERVER}"
    - kubectl config set clusters.k8s.certificate-authority-data ${CERTIFICATE_AUTHORITY_DATA}
    - kubectl config set-credentials gitlab --token="${USER_TOKEN}"
    - kubectl config set-context default --cluster=k8s --user=gitlab
    - kubectl config use-context default
    - sed -i "s/<VERSION>/${TAG}/g" ${APP_NAME}-deployment.yaml
    - pwd=$(aws ecr get-login --no-include-email --region us-east-1 | awk '{print $6}')
    - kubectl delete secret eip-registry-secret || true
    - echo $pwd
    - kubectl create secret docker-registry eip-registry-secret --docker-server=https://${REPOSITORY_URL} --docker-username="AWS" --docker-password=$pwd -n default
    - kubectl delete -f ${APP_NAME}-deployment.yaml || true
    - kubectl apply -f ${APP_NAME}-deployment.yaml --namespace="default"
  only:
    - disabled


build-int:
  # Official docker image.
  image: docker:latest
  stage: build-int
  services:
    - docker:dind
  before_script:
    # - docker login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" "${REPOSITORY_URL}"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - cd server
    - docker info
    - docker build -f Dockerfile --pull -t "$CI_REGISTRY_IMAGE" .
    - docker tag  ${CI_REGISTRY_IMAGE}:latest "$CI_REGISTRY_IMAGE":"${CI_COMMIT_SHORT_SHA}"
    - docker push "$CI_REGISTRY_IMAGE"
    - docker push "$CI_REGISTRY_IMAGE":"${CI_COMMIT_SHORT_SHA}"
  only:
    - RELEASE-HELM

deploy-int:
  stage: deploy-int
  script:
    - cd server
    - kubectl config set-cluster k8s --server="${SANDBOX_SERVER}"
    - kubectl config set clusters.k8s.certificate-authority-data ${SANDBOX_CERTIFICATE_AUTHORITY_DATA}
    - kubectl config set-credentials gitlab --token="${SANDBOX_USER_TOKEN}"
    - kubectl config set-context ${K8_INT_NAMESPACE} --cluster=k8s --user=gitlab
    - kubectl config use-context ${K8_INT_NAMESPACE}
    - helm list --namespace "${K8_INT_NAMESPACE}"
    - helm upgrade --install --wait ${CI_PROJECT_NAME} --namespace ${K8_INT_NAMESPACE} --set imageRepo=$REPOSITORY_URL ./helm/${CI_PROJECT_NAME}
  only:
    refs:
      - RELEASE-HELM


include:
  - project: eip/alice/ci_cd_Template
    file: .gitlab-ci-meepmeep.yaml
  - project: eip/alice/ci_cd_Template
    file: .gitlab-cve-scan-ci.yaml
  - project: eip/alice/ci_cd_Template
    file: .gitlab-int-helm-cicd.yaml





